extfn exit(exitCode: int)

struct Result
{
    var _val:int, err:bool
}

fn val(this:Result) -> int
{
    if(this.err == true) 
    {
        println("ERROR: Called val() on result with error")
        exit(1)
    }
    
    return this._val
}

fn fail() -> Result
{ 
    var res:Result
    
    res.err = true

    return res
}

fn success(value:int) -> Result
{
    var res:Result
    
    res.err = false
    res._val = value
    
    return res
}

struct FloatResult
{
    var _fVal:float, err:bool
}

fn floatVal(this:FloatResult) -> float
{
    if(this.err == true)
    {
        println("ERROR: Called val() on floatResult with error")
        exit(1)
    }
    
    return this._fVal
}

fn floatFail() -> FloatResult
{
    var res:FloatResult
    
    res.err = true

    return res
}

fn floatSuccess(value:float) -> FloatResult
{
    var res:FloatResult
    
    res.err = false
    res._fVal = value
    
    return res
}

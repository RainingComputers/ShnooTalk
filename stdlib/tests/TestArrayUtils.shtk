use "stdlib/ArrayUtils.shtk" as array

fn main() -> int
{
    println("search")

    var a := [5, 3, 4, 1, 2]

    println(array::search[int](a, 5, 5).expect())
    println(array::search[int](a, 5, 1).expect())
    println(array::search[int](a, 5, 4).expect())
    println(array::search[int](a, 5, 2).expect())
    println(array::search[int](a, 5, 10).isNone())

    println("binarySearch")

    var b := [1, 10, 23, 45, 67, 100]

    println(array::binarySearch[int](b, 6, 1).expect())
    println(array::binarySearch[int](b, 6, 45).expect())
    println(array::binarySearch[int](b, 6, 23).expect())
    println(array::binarySearch[int](b, 6, 100).expect())
    println(array::binarySearch[int](b, 6, 1223).isNone()) 

    println("count")

    var c := [1, 23, 45, 32, 34, 32, 32, 54, 32, 45]

    println(array::count[int](c, 10, 32))
    println(array::count[int](c, 10, 45))
    println(array::count[int](c, 10, 100))
    println(array::count[int](c, 10, 23))

    println("isEqual")

    println(array::isEqual[int](a, 5, b, 5))
    println(array::isEqual[int](a, 5, a, 5))

    println("sort")

    var d := [23, 64, 78, 34, 56, 87, 45, 67, 34, 879, 342, 674, 23, 6457, 23, 45, 45, 645, 54, 6]
    array::sortInPlace[int](d, 20)

    for var i: ulong = 0; i < 20; i += 1
        print(d[i]; ", ")

    println("")
    
    println("reverse")

    var e := [1, 2, 3, 4, 5]
    array::reverseInPlace[int](e, 5)

    for i = 0; i < 5; i += 1
        print(e[i]; ", ")

    return 0
}
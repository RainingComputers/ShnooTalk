use "../stdlib/Libc.shtk" as libc
from "../stdlib/String.shtk" use String, stringFromPreAllocated
from "../stdlib/RawPointerUtils.shtk" use malloc, realloc, free
from "../stdlib/Result.shtk" use Result, ok, error
from "../stdlib/ErrorTypes.shtk" use StdlibError, OSError

fn input() -> Result[String, StdlibError]
{
    const stride: ulong = 256

    var i: ulong = 0
    var currentSize: ulong = stride
    var ptr: char[] <- malloc[char](currentSize)
    
    loop {
        const intChar := libc::getchar()

        if intChar < 0 {
            free[char](ptr)
            return fail[String, StdlibError](OSError)
        }

        if i == currentSize - 1 {
            currentSize += stride
            ptr <- realloc[char](ptr, currentSize)
        }

        const character := char`intChar

        if character == '\n' {
            ptr[i] = '\0'
            break
        }

        ptr[i] = character

        i += 1
    }

    const line := stringFromPreAllocated(ptr, currentSize, i-1)
    return ok[String, StdlibError](line)
}
use "../stdlib/LibC.shtk" as libc
from "../stdlib/SharedPointer.shtk" use SharedPointer, allocateHeap

struct String
{
    var _sp: SharedPointer[char]
    var _length: ulong
}

fn string(charArray: char[], lengthIncNull: ulong) -> String
{
    var self: String

    const length := lengthIncNull - 1
    const capacity := length*2 

    self._length = length
    self._sp = allocateHeap[char](capacity)
    self._sp.copy(charArray, length+1)

    return self
}

fn coerceCharArray(charArray: char[], lengthIncNull: ulong) -> String
{
    return string(charArray, lengthIncNull)
}

fn length(self: String) -> ulong
{
    return self._length
}

fn toCharArray(self: String) -> char[]
{
    return self._sp.slice().pointer()
}


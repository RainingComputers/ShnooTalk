> nodeType=PROGRAM, string="", tokenType=NONE, line=0, col=0
  ├───> nodeType=FUNCTION, string="fn", tokenType=FUNCTION, line=6, col=0
  │     ├───> nodeType=IDENTIFIER, string="factorial", tokenType=IDENTIFIER, line=6, col=3
  │     ├───> nodeType=PARAM, string="num", tokenType=IDENTIFIER, line=6, col=13
  │     │     ├───> nodeType=IDENTIFIER, string="num", tokenType=IDENTIFIER, line=6, col=13
  │     │     └───> nodeType=IDENTIFIER, string="int", tokenType=IDENTIFIER, line=6, col=17
  │     ├───> nodeType=IDENTIFIER, string="int", tokenType=IDENTIFIER, line=6, col=25
  │     └───> nodeType=BLOCK, string="{", tokenType=OPEN_BRACE, line=7, col=0
  │           ├───> nodeType=IF, string="if", tokenType=IF, line=8, col=4
  │           │     └───> nodeType=IF, string="if", tokenType=IF, line=8, col=4
  │           │           ├───> nodeType=EXPRESSION, string="(", tokenType=LPAREN, line=8, col=6
  │           │           │     └───> nodeType=TERM, string="(", tokenType=LPAREN, line=8, col=6
  │           │           │           └───> nodeType=EXPRESSION, string="num", tokenType=IDENTIFIER, line=8, col=7
  │           │           │                 ├───> nodeType=EXPRESSION, string="num", tokenType=IDENTIFIER, line=8, col=7
  │           │           │                 │     └───> nodeType=TERM, string="num", tokenType=IDENTIFIER, line=8, col=7
  │           │           │                 │           └───> nodeType=IDENTIFIER, string="num", tokenType=IDENTIFIER, line=8, col=7
  │           │           │                 ├───> nodeType=OPERATOR, string="<=", tokenType=LESS_THAN_EQUAL, line=8, col=11
  │           │           │                 └───> nodeType=EXPRESSION, string="1", tokenType=INT_LITERAL, line=8, col=14
  │           │           │                       └───> nodeType=TERM, string="1", tokenType=INT_LITERAL, line=8, col=14
  │           │           │                             └───> nodeType=LITERAL, string="1", tokenType=INT_LITERAL, line=8, col=14
  │           │           └───> nodeType=BLOCK, string="return", tokenType=RETURN, line=8, col=17
  │           │                 └───> nodeType=RETURN, string="return", tokenType=RETURN, line=8, col=17
  │           │                       └───> nodeType=EXPRESSION, string="1", tokenType=INT_LITERAL, line=8, col=24
  │           │                             └───> nodeType=TERM, string="1", tokenType=INT_LITERAL, line=8, col=24
  │           │                                   └───> nodeType=LITERAL, string="1", tokenType=INT_LITERAL, line=8, col=24
  │           └───> nodeType=RETURN, string="return", tokenType=RETURN, line=10, col=4
  │                 └───> nodeType=EXPRESSION, string="num", tokenType=IDENTIFIER, line=10, col=11
  │                       ├───> nodeType=EXPRESSION, string="num", tokenType=IDENTIFIER, line=10, col=11
  │                       │     └───> nodeType=TERM, string="num", tokenType=IDENTIFIER, line=10, col=11
  │                       │           └───> nodeType=IDENTIFIER, string="num", tokenType=IDENTIFIER, line=10, col=11
  │                       ├───> nodeType=OPERATOR, string="*", tokenType=MULTIPLY, line=10, col=15
  │                       └───> nodeType=EXPRESSION, string="factorial", tokenType=IDENTIFIER, line=10, col=17
  │                             └───> nodeType=TERM, string="factorial", tokenType=IDENTIFIER, line=10, col=17
  │                                   └───> nodeType=FUNCCALL, string="factorial", tokenType=IDENTIFIER, line=10, col=17
  │                                         └───> nodeType=EXPRESSION, string="num", tokenType=IDENTIFIER, line=10, col=27
  │                                               ├───> nodeType=EXPRESSION, string="num", tokenType=IDENTIFIER, line=10, col=27
  │                                               │     └───> nodeType=TERM, string="num", tokenType=IDENTIFIER, line=10, col=27
  │                                               │           └───> nodeType=IDENTIFIER, string="num", tokenType=IDENTIFIER, line=10, col=27
  │                                               ├───> nodeType=OPERATOR, string="-", tokenType=MINUS, line=10, col=31
  │                                               └───> nodeType=EXPRESSION, string="1", tokenType=INT_LITERAL, line=10, col=33
  │                                                     └───> nodeType=TERM, string="1", tokenType=INT_LITERAL, line=10, col=33
  │                                                           └───> nodeType=LITERAL, string="1", tokenType=INT_LITERAL, line=10, col=33
  └───> nodeType=FUNCTION, string="fn", tokenType=FUNCTION, line=13, col=0
        ├───> nodeType=IDENTIFIER, string="main", tokenType=IDENTIFIER, line=13, col=3
        ├───> nodeType=IDENTIFIER, string="int", tokenType=IDENTIFIER, line=13, col=13
        └───> nodeType=BLOCK, string="{", tokenType=OPEN_BRACE, line=14, col=0
              ├───> nodeType=PRINTLN, string="println", tokenType=PRINTLN, line=15, col=4
              │     └───> nodeType=EXPRESSION, string="factorial", tokenType=IDENTIFIER, line=15, col=12
              │           └───> nodeType=TERM, string="factorial", tokenType=IDENTIFIER, line=15, col=12
              │                 └───> nodeType=FUNCCALL, string="factorial", tokenType=IDENTIFIER, line=15, col=12
              │                       └───> nodeType=EXPRESSION, string="2", tokenType=INT_LITERAL, line=15, col=22
              │                             └───> nodeType=TERM, string="2", tokenType=INT_LITERAL, line=15, col=22
              │                                   └───> nodeType=LITERAL, string="2", tokenType=INT_LITERAL, line=15, col=22
              ├───> nodeType=PRINTLN, string="println", tokenType=PRINTLN, line=16, col=4
              │     └───> nodeType=EXPRESSION, string="factorial", tokenType=IDENTIFIER, line=16, col=12
              │           └───> nodeType=TERM, string="factorial", tokenType=IDENTIFIER, line=16, col=12
              │                 └───> nodeType=FUNCCALL, string="factorial", tokenType=IDENTIFIER, line=16, col=12
              │                       └───> nodeType=EXPRESSION, string="3", tokenType=INT_LITERAL, line=16, col=22
              │                             └───> nodeType=TERM, string="3", tokenType=INT_LITERAL, line=16, col=22
              │                                   └───> nodeType=LITERAL, string="3", tokenType=INT_LITERAL, line=16, col=22
              ├───> nodeType=PRINTLN, string="println", tokenType=PRINTLN, line=17, col=4
              │     └───> nodeType=EXPRESSION, string="factorial", tokenType=IDENTIFIER, line=17, col=12
              │           └───> nodeType=TERM, string="factorial", tokenType=IDENTIFIER, line=17, col=12
              │                 └───> nodeType=FUNCCALL, string="factorial", tokenType=IDENTIFIER, line=17, col=12
              │                       └───> nodeType=EXPRESSION, string="4", tokenType=INT_LITERAL, line=17, col=22
              │                             └───> nodeType=TERM, string="4", tokenType=INT_LITERAL, line=17, col=22
              │                                   └───> nodeType=LITERAL, string="4", tokenType=INT_LITERAL, line=17, col=22
              ├───> nodeType=PRINTLN, string="println", tokenType=PRINTLN, line=18, col=4
              │     └───> nodeType=EXPRESSION, string="factorial", tokenType=IDENTIFIER, line=18, col=12
              │           └───> nodeType=TERM, string="factorial", tokenType=IDENTIFIER, line=18, col=12
              │                 └───> nodeType=FUNCCALL, string="factorial", tokenType=IDENTIFIER, line=18, col=12
              │                       └───> nodeType=EXPRESSION, string="5", tokenType=INT_LITERAL, line=18, col=22
              │                             └───> nodeType=TERM, string="5", tokenType=INT_LITERAL, line=18, col=22
              │                                   └───> nodeType=LITERAL, string="5", tokenType=INT_LITERAL, line=18, col=22
              └───> nodeType=RETURN, string="return", tokenType=RETURN, line=20, col=4
                    └───> nodeType=EXPRESSION, string="0", tokenType=INT_LITERAL, line=20, col=11
                          └───> nodeType=TERM, string="0", tokenType=INT_LITERAL, line=20, col=11
                                └───> nodeType=LITERAL, string="0", tokenType=INT_LITERAL, line=20, col=11

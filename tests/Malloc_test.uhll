# x: 0 y: 10
# x: 1 y: 11
# x: 2 y: 12
# x: 3 y: 13
# x: 4 y: 14
# x: 5 y: 15
# x: 6 y: 16
# x: 7 y: 17
# x: 8 y: 18
# x: 9 y: 19

def NUM_ELEM 10

extfn malloc(size: ulong) -> char[]

struct Vector
{
    var x: int, y: int
}

fn createVector(x: int, y: int) -> Vector
{
    var v: Vector
    v.x = x
    v.y = y
    return v
}

fn printVec(vector: Vector)
{
    println("x:", vector.x, "y:", vector.y)
}


fn main() -> int
{
    var vecArray: Vector[] <- Vector[]'malloc(sizeof(Vector)*10)
    var i: int

    for (i = 0; i < NUM_ELEM; i += 1)
        vecArray[i] = createVector(i, i+10)

    for (i = 0; i < NUM_ELEM; i += 1)
        printVec(vecArray[i])

    return 0
}
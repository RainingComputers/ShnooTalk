{
    "moduleName": "NestedParameterFunctionCall.shtk",
    "uses": ["TestModules/Math.shtk"],
    "aliases": {
        "math": "TestModules/Math.shtk"
    },
    "enumerations": {
    },
    "intDefines": {
        "false": 0,
        "true": 1
    },
    "floatDefines": {
        "infinity": inf,
        "nan": nan
    },
    "stringDefines": {
    },
    "stringsDataCharCounts": {
    },
    "globals": {
    },
    "structures": {
    },
    "externFunctions": {
    },
    "functions": {
        "_fn_NestedParameterFunctionCall_shtk_foobar": {
            "moduleName": "NestedParameterFunctionCall.shtk",
            "parameters": ["a", "b"],
            "functionReturnType": {"dtype": "void", "dtypeSize": 0, "size": 0, "moduleName": "NestedParameterFunctionCall.shtk", "offset": 0, "dimensions": [], "dimTypes": [], "properties": []},
            "symbols": {
                "a": {"dtype": "float", "dtypeSize": 4, "size": 4, "moduleName": "NestedParameterFunctionCall.shtk", "offset": 0, "dimensions": [], "dimTypes": [], "properties": ["isParameter"]},
                "b": {"dtype": "int", "dtypeSize": 4, "size": 4, "moduleName": "NestedParameterFunctionCall.shtk", "offset": 0, "dimensions": [], "dimTypes": [], "properties": ["isParameter"]}
            }
            "icode": [
                    print float a
                    newLine
                    print int b
                    newLine
                    return
            ]
        },
        "_fn_NestedParameterFunctionCall_shtk_sum": {
            "moduleName": "NestedParameterFunctionCall.shtk",
            "parameters": ["a", "b"],
            "functionReturnType": {"dtype": "int", "dtypeSize": 4, "size": 4, "moduleName": "NestedParameterFunctionCall.shtk", "offset": 0, "dimensions": [], "dimTypes": [], "properties": []},
            "symbols": {
                "a": {"dtype": "int", "dtypeSize": 4, "size": 4, "moduleName": "NestedParameterFunctionCall.shtk", "offset": 0, "dimensions": [], "dimTypes": [], "properties": ["isParameter"]},
                "b": {"dtype": "int", "dtypeSize": 4, "size": 4, "moduleName": "NestedParameterFunctionCall.shtk", "offset": 0, "dimensions": [], "dimTypes": [], "properties": ["isParameter"]}
            }
            "icode": [
                    int temp11 = add int a, int b
                    int returnValue8 = equal int temp11
                    return
            ]
        },
        "main": {
            "moduleName": "NestedParameterFunctionCall.shtk",
            "parameters": [],
            "functionReturnType": {"dtype": "int", "dtypeSize": 4, "size": 4, "moduleName": "NestedParameterFunctionCall.shtk", "offset": 0, "dimensions": [], "dimTypes": [], "properties": []},
            "symbols": {
            }
            "icode": [
                    float temp17 = cast autoFloat 0.500000
                    pass float temp17, float _fn_TestModules_Math_shtk_sin, module TestModules/Math.shtk
                    float calleeReturnValue20 = call float _fn_TestModules_Math_shtk_sin, module TestModules/Math.shtk
                    pass float calleeReturnValue20, void _fn_NestedParameterFunctionCall_shtk_foobar, module NestedParameterFunctionCall.shtk
                    int temp30 = cast autoInt 1
                    pass int temp30, int _fn_NestedParameterFunctionCall_shtk_sum, module NestedParameterFunctionCall.shtk
                    int temp34 = cast autoInt 2
                    pass int temp34, int _fn_NestedParameterFunctionCall_shtk_sum, module NestedParameterFunctionCall.shtk
                    int calleeReturnValue37 = call int _fn_NestedParameterFunctionCall_shtk_sum, module NestedParameterFunctionCall.shtk
                    pass int calleeReturnValue37, void _fn_NestedParameterFunctionCall_shtk_foobar, module NestedParameterFunctionCall.shtk
                    void calleeReturnValue42 = call void _fn_NestedParameterFunctionCall_shtk_foobar, module NestedParameterFunctionCall.shtk
                    int temp47 = cast autoInt 0
                    int returnValue45 = equal int temp47
                    return
            ]
        }
    }
}